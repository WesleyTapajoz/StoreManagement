@model SGL.Domain.Entity.Livro
@{

    ViewBag.Title = "Adicionar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Adicionar</h2>


@using (Html.BeginForm("AdicionarConfirmar", "Livro"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Livro</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Paginas, htmlAttributes: new { @class = "control-label col-md-2", @maxlength = "4", @minlength = "1", @type = "number" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Paginas, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Paginas, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Genero", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListGenero(model => model.GeneroId, new
                     {
                         @class = "form-control selectpicker",
                         data_show_subtext = "true",
                         data_live_search = "true",
                         tabindex = "auto"
                     }, "Selecione")
            @Html.ValidationMessageFor(model => model.GeneroId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Autor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListAutor(model => model.AutorId, new
                    {
                        @class = "form-control selectpicker",
                        data_show_subtext = "true",
                        data_live_search = "true",
                        tabindex = "auto"
                    }, "Selecione")
            @Html.ValidationMessageFor(model => model.AutorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Editora", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListEditora(model => model.EditoraId, new
                  {
                      @class = "form-control selectpicker",
                      data_show_subtext = "true",
                      data_live_search = "true",
                      tabindex = "auto"
                  }, "Selecione")
            @Html.ValidationMessageFor(model => model.EditoraId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sinopse, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sinopse, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sinopse, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Capa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Capa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Capa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Link Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Link.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Url", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Link.Url, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Link.Url, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
